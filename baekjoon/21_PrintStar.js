/* 
https://www.acmicpc.net/problem/2447

--- 별 찍기 - 10 ---

-- 문제
재귀적인 패턴으로 별을 찍어 보자. N이 3의 거듭제곱(3, 9, 27, ...)이라고 할 때, 크기 N의 패턴은 N×N 정사각형 모양이다.

크기 3의 패턴은 가운데에 공백이 있고, 가운데를 제외한 모든 칸에 별이 하나씩 있는 패턴이다.

***
* *
***
N이 3보다 클 경우, 크기 N의 패턴은 공백으로 채워진 가운데의 (N/3)×(N/3) 정사각형을 크기 N/3의 패턴으로 둘러싼 형태이다. 
예를 들어 크기 27의 패턴은 예제 출력 1과 같다.

-- 입력
첫째 줄에 N이 주어진다. N은 3의 거듭제곱이다. 즉 어떤 정수 k에 대해 N=3k이며, 이때 1 ≤ k < 8이다.

-- 출력
첫째 줄부터 N번째 줄까지 별을 출력한다.

- 예제 입력 1 
27
- 예제 출력 1 
***************************
* ** ** ** ** ** ** ** ** *
***************************
***   ******   ******   ***
* *   * ** *   * ** *   * *
***   ******   ******   ***
***************************
* ** ** ** ** ** ** ** ** *
***************************
*********         *********
* ** ** *         * ** ** *
*********         *********
***   ***         ***   ***
* *   * *         * *   * *
***   ***         ***   ***
*********         *********
* ** ** *         * ** ** *
*********         *********
***************************
* ** ** ** ** ** ** ** ** *
***************************
***   ******   ******   ***
* *   * ** *   * ** *   * *
***   ******   ******   ***
***************************
* ** ** ** ** ** ** ** ** *
***************************
*/

/* 
-- 풀이
입력크기에 따라 전체 별을 찍어준다.
전체 별 그림에서 가운데 구역의 별을 지워준다.
지워진 구역을 둘러싼 다음 별을 지울 구역은 항상 9개 이므로 9개의 시작 위치를 구해서 재귀 호출해준다.
*/

const fs = require("fs");
const input = Number(fs.readFileSync("/dev/stdin").toString());

const stars = Array.from({ length: input }, () =>
  Array.from({ length: input }, () => "*")
);

const eraseStars = (n, startRow, startCol) => {
  if (n <= 1) return;

  const nextN = n / 3;

  // 내부 별 지우기
  for (let r = 0; r < nextN; r++) {
    for (let c = 0; c < nextN; c++) {
      stars[startRow + nextN + r][startCol + nextN + c] = " ";
    }
  }

  // 둘러싼 9개의 구역에 대해 시작지점을 정해서 재귀 호출
  for (let i = 0; i < 9; i++) {
    const nextStartRow = startRow + nextN * (i % 3);
    const nextStartCol = startCol + nextN * Math.floor(i / 3);

    eraseStars(nextN, nextStartRow, nextStartCol);
  }
};

eraseStars(input, 0, 0);

const result = stars.map((val) => val.join("")).join("\n");
console.log(result);
