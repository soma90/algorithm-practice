/* 
https://school.programmers.co.kr/learn/courses/30/lessons/12945

--- 피보나치 수 ---

-- 문제 설명
피보나치 수는 F(0) = 0, F(1) = 1일 때, 1 이상의 n에 대하여 F(n) = F(n-1) + F(n-2) 가 적용되는 수 입니다.

예를들어

F(2) = F(0) + F(1) = 0 + 1 = 1
F(3) = F(1) + F(2) = 1 + 1 = 2
F(4) = F(2) + F(3) = 1 + 2 = 3
F(5) = F(3) + F(4) = 2 + 3 = 5
와 같이 이어집니다.

2 이상의 n이 입력되었을 때, n번째 피보나치 수를 1234567으로 나눈 나머지를 리턴하는 함수, solution을 완성해 주세요.

-- 제한 사항
n은 2 이상 100,000 이하인 자연수입니다.

-- 입출력 예
n	return
3	2
5	5

-- 입출력 예 설명
피보나치수는 0번째부터 0, 1, 1, 2, 3, 5, ... 와 같이 이어집니다.
*/

/**
 * -- 풀이
 * memo 배열을 선언하고, 첫 번째와 두 번째 항을 0과 1로 초기화합니다. 이 배열은 이미 계산된 항들을 저장하기 위해 사용됩니다.
 * 반복문을 사용하여 2번째부터 n번째 항까지의 값을 계산합니다.
 * 현재 항의 값은 이전 두 항의 합을 1234567로 나눈 나머지 값입니다. 
 * 이는 나머지가 매우 큰 수가 될 경우에도 범위를 제한하기 위한 것입니다. ((memo[i - 2] + memo[i - 1]) % 1234567)
 * 결과적으로, memo[i]에는 피보나치 수열의 i번째 항의 값이 저장됩니다.
 * 반복문이 완료되면 memo[n]에는 n번째 피보나치 수열의 값이 저장되어 있습니다. 이 값을 반환하여 함수의 결과로 제공합니다.
 */
function solution(n) {
  let memo = [0, 1];

  for (let i = 2; i <= n; i++) {
    memo[i] = (memo[i - 2] + memo[i - 1]) % 1234567;
  }

  return memo[n];
}

let result = solution(5);
console.log(result);
